{"version":3,"sources":["assets/me.jpg","components/LandingBanner/LandingBanner.js","components/Navbar.js","components/Sections/About.js","components/Sections/Projects/ProjectItem.js","components/Sections/Projects/Projects.js","components/Sections/Contact/Contact.js","components/Footer.js","utils/client.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LandingBanner","className","to","spy","smooth","duration","activeClass","Navbar","useState","classes","setClasses","toggleNavbar","includes","Links","onClick","join","About","id","name","src","Me","width","alt","href","ProjectItem","description","url","target","rel","REPOS","gql","Projects","useQuery","loading","error","data","projects","edges","repositoryOwner","pinnedRepositories","map","key","node","Contact","Footer","client","ApolloClient","uri","request","operation","setContext","headers","Authorization","App","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9172eb96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.00bdcbb9.jpg\";","import React from \"react\";\r\nimport \"./landingBanner.css\";\r\nimport { Link } from \"react-scroll\";\r\nconst LandingBanner = () => {\r\n    return(\r\n        <div className=\"landing\">\r\n            <div className=\"content\">\r\n                <h1>Hi! I am Ian Salazar</h1>\r\n                <div>I develop web applications using HTML, CSS, JS, and back-end services using Python</div>\r\n                <Link \r\n                    to=\"projects-section\"\r\n                    spy={ true }\r\n                    smooth={ true }\r\n                    duration={ 500 }\r\n                    className=\"navbar-item\"\r\n                    activeClass=\"navbar-item-active\"\r\n                    >\r\n                    <div className=\"button button-primary\">View Projects</div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingBanner;","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from 'react-scroll';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    // let itemClasses = [\"navbar-items\"]\r\n    const [ classes, setClasses ] = useState([\"navbar-items\"]);\r\n\r\n    const toggleNavbar = () => {\r\n        \r\n        if(!classes.includes('show')){\r\n            setClasses( [ ...classes, \"show\" ] );\r\n        } else {\r\n            setClasses( [\"navbar-items\"] );\r\n        }\r\n    };\r\n    const Links = (\r\n        <Fragment>\r\n            <Link \r\n                to=\"about-section\"\r\n                spy={ true }\r\n                smooth={ true }\r\n                duration={ 500 }\r\n                className=\"navbar-item\"\r\n                activeClass=\"navbar-item-active\"\r\n                onClick={ toggleNavbar }\r\n            >\r\n                <div>\r\n                    About\r\n                </div>\r\n            </Link>\r\n            <Link \r\n                to=\"projects-section\"\r\n                spy={ true }\r\n                smooth={ true }\r\n                duration={ 500 }\r\n                className=\"navbar-item\"\r\n                activeClass=\"navbar-item-active\"\r\n                onClick={ toggleNavbar }\r\n                >\r\n                Projects\r\n            </Link>\r\n            <Link \r\n                to=\"contact-section\"\r\n                spy={ true }\r\n                smooth={ true }\r\n                duration={ 500 }\r\n                className=\"navbar-item\"\r\n                activeClass=\"navbar-item-active\"\r\n                onClick={ toggleNavbar }\r\n            >\r\n                Contact\r\n            </Link>\r\n        </Fragment>\r\n    )\r\n    \r\n    return(\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-brand\">Ian Salazar</div>\r\n            <div className=\"burger\" onClick={ toggleNavbar }>\r\n                <i className=\"fa fa-bars\" />\r\n            </div>\r\n            <div className={ classes.join(' ') }>\r\n                { Links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React, { Fragment } from \"react\";\r\nimport { Element } from 'react-scroll'\r\nimport Me from \"../../assets/me.jpg\";\r\nconst About = () => {\r\n    return (\r\n        <Fragment>\r\n            <Element id=\"about-section\" name=\"about-section\">\r\n                <div className=\"section section-1\">\r\n                    <div className=\"container section-content\">\r\n                        <h2>About Me</h2>\r\n                        <div className=\"margin-y-2 grid-2-8\">\r\n                            <div>\r\n                                <img \r\n                                    src={ Me }\r\n                                    width=\"200\"\r\n                                    alt=\"avatar\" \r\n                                    className=\"circular-image\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"text-justified\">\r\n                                <p className=\"text-indent\">\r\n                                    I'm a freelance web developer based in Los Baños, Laguna, Philippines. \r\n                                    I am currently studying BS Computer Science in the University of the Philippines (UPLB) Los Baños.\r\n                                </p>\r\n                                <p className=\"text-indent\">\r\n                                    I also join hackathons with my friends because we enjoy thrill of making solutions in a short amount of time. \r\n                                    In this year, I joined <a href=\"https://hack4rice2019.irri.org/\">Hack4Rice</a> and <a href=\"https://www.spaceappschallenge.org/\">NASA Space Apps Challenge: Online Participation</a>.\r\n                                    In most of my projects, I use React for the front-end and either Django or Express for the back-end. \r\n                                    For databases, I am more familiar in using PostgresQL than MongoDB. \r\n                                </p>\r\n                                <p className=\"text-indent\">\r\n                                    Other than that, I also enjoy reading books. Especially financial literacy books like Rich Dad Poor Dad and business-related books like The Lean Startup.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Element>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./projectItem.css\";\r\n\r\nconst ProjectItem = ({ name, description, url }) => {\r\n    return(\r\n        <div className=\"bg-light\" id=\"projectItem\">            \r\n            <div id=\"header\" className=\"text-center text-header\">{ name }</div>\r\n            <div className=\"text-left text-indent\" id=\"description\">\r\n                { description === null ? \"No Description provided\" : description }\r\n            </div>\r\n            <div id=\"footnote\">\r\n                <a \r\n                    className=\"button button-primary button-block\" \r\n                    href={ url }\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    View Project\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    name: PropTypes.string,\r\n    description: PropTypes.string,\r\n    url: PropTypes.string,\r\n}\r\n\r\nexport default ProjectItem;\r\n","import React, { Fragment } from \"react\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport ProjectItem from \"./ProjectItem\";\r\nimport { Element } from 'react-scroll'\r\n\r\nconst REPOS = gql`\r\nquery{\r\n    repositoryOwner(login: \"dertrockx\") {\r\n    ... on User {\r\n      pinnedRepositories(first:6) {\r\n        edges {\r\n          node {\r\n            name,\r\n            url,\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\nconst Projects = () => {\r\n    const { loading, error, data } = useQuery(REPOS);\r\n    let projects = <div>...</div>\r\n    if(!loading && !error){\r\n        const { edges } = data.repositoryOwner.pinnedRepositories;\r\n        projects = (\r\n            <Fragment>\r\n                { edges.map( ({ node }, key) => (\r\n                   <ProjectItem \r\n                    key={ key }\r\n                    name={ node.name }\r\n                    description={ node.description }\r\n                    url={ node.url }\r\n                    />\r\n                )) }\r\n            </Fragment>\r\n        )\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Element id=\"projects-section\" name=\"projects-section\">\r\n          <div className=\"section section-2\">\r\n              <div className=\"container section-content\">\r\n                  <h2>Projects</h2>\r\n                  <div className=\"margin-y-2 grid-3\">\r\n                      { projects }\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </Element>\r\n      </Fragment>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React, { Fragment } from 'react'\r\nimport ContactForm from \"./ContactForm\";\r\nimport { Element } from \"react-scroll\";\r\nconst Contact = () => {\r\n    return(\r\n        <Fragment>\r\n            <Element id=\"contact-section\" name=\"contact-section\">\r\n                <div className=\"section section-1\">\r\n                    <div className=\"container section-content\">\r\n                        <h2>Contact Me</h2>\r\n                        <div className=\"margin-y-2 grid-1\">\r\n                            {/*\r\n                            <div>\r\n                                <ContactForm />\r\n                            </div>\r\n                            */}\r\n                            <div className=\"\">\r\n                                <div className=\"form-container\">\r\n                                    <h3>My e-mails</h3>\r\n                                    <div className=\"card bg-primary\">\r\n                                        iansalazar67@gmail.com\r\n                                    </div>\r\n                                    <div className=\"card bg-primary\">\r\n                                        iisalazar@up.edu.ph\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <h3>Reach me through my social accounts</h3>\r\n                                    <div className=\"margin-y-1\">\r\n                                        <a \r\n                                            href=\"https://linkedin.com/in/ian-salazar-22373b19a\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                        >\r\n                                            <button \r\n                                                className=\"button button-link button-circular button-secondary social-link\"\r\n                                            >\r\n                                                <i className=\"fa fa-linkedin\" />\r\n                                            </button>\r\n                                        </a>\r\n                                        <a \r\n                                            href=\"https://www.facebook.com/salazar.ian.i\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                        >\r\n                                            <button \r\n                                                className=\"button button-link button-circular button-secondary social-link\"\r\n                                            >\r\n                                                <i className=\"fa fa-facebook\" />\r\n                                            </button>\r\n                                        </a>\r\n                                        <a \r\n                                            href=\"https://github.com/dertrockx\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                        >\r\n                                            <button className=\"button button-link button-circular button-secondary social-link\">\r\n                                                <i className=\"fa fa-github\" />\r\n                                            </button>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Element>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className=\"bg-secondary text-center\">\r\n            <i>Just a footer ;)</i>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import ApolloClient from 'apollo-boost';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://api.github.com/graphql',\r\n  request: (operation) => {\r\n    const token = 'f0c4caf53351aae1efcbac631de86d2ef4a3830a';\r\n    operation.setContext({\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n  }\r\n});\r\n\r\nexport default client;","import React, { Fragment } from 'react';\nimport './App.css';\nimport LandingBanner from \"./components/LandingBanner/LandingBanner\";\nimport Navbar from \"./components/Navbar\";\nimport About from './components/Sections/About';\nimport Projects from './components/Sections/Projects/Projects';\nimport Contact from \"./components/Sections/Contact/Contact\";\nimport Footer from \"./components/Footer\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport client from \"./utils/client\";\n\nconst App = () => {\n  console.log(\"Hi fellow dev! I see your checking on my page. If you want to know how I created this, feel free to contact me ;)\\nMy e-mail is located below on my website\");\n  return(\n    <ApolloProvider client={client}>\n      <Fragment>\n        <Navbar />\n        <LandingBanner />\n        <About />\n        <Projects />\n        <Contact />\n        <Footer />\n      </Fragment>\n    </ApolloProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}